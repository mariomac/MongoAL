<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>es.bsc</groupId>
    <artifactId>mongoal</artifactId>
    <name>MongoAL</name>
    <version>1.0-SNAPSHOT</version>

    <packaging>jar</packaging>
    <url>http://www.xaas.guru</url>

    <dependencies>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
            <version>4.3</version>
            <scope>providedmvn </scope>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4-runtime</artifactId>
            <version>4.3</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

  <!--

    Tell Maven which other artifacts we need in order to
    build with the ANTLR Tool. Here we also make the default
    goal be install so that you can just type mvn at the command
    line instead of mvn install. And we add the java compiler plugin
    for convenience to show how you can use 1.6 source files but
    generate 1.4 compatible .class files (as few people seem to
    know about the jsr14 target).
    -->
    <build>

        <defaultGoal>install</defaultGoal>

        <plugins>

            <plugin>

                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.3</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

</project>
